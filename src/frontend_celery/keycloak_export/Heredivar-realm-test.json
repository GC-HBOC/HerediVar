{
  "id" : "HerediVar",
  "realm" : "HerediVar",
  "notBefore" : 1655296162,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 3600,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : true,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "6e0e59f9-6a6a-4b0a-8643-53b13de4c217",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "HerediVar",
      "attributes" : { }
    }, {
      "id" : "3d0e76e4-df7e-44a1-93f6-0242caaf84e9",
      "name" : "default-roles-heredivar",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "HerediVar",
      "attributes" : { }
    }, {
      "id" : "ab993489-bc7c-49a0-9a7f-eb8702a33641",
      "name" : "visitor",
      "description" : "A HerediVar visitor which is able to see information in HerediVar",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "HerediVar",
      "attributes" : { }
    }, {
      "id" : "95e2e998-590e-4de0-a620-8cf91fb2e4d3",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "HerediVar",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "a66458ef-0284-4269-8c17-4ae67cad4934",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "1e0951a4-6b47-42fe-b8ea-1bba84226222",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "5e055fcf-c3e9-4719-a9f9-93a226ca06c3",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-clients", "manage-users", "view-authorization", "manage-authorization", "view-clients", "manage-realm", "view-events", "manage-events", "query-users", "query-groups", "query-realms", "query-clients", "manage-identity-providers", "create-client", "view-realm", "view-users", "impersonation", "view-identity-providers" ]
          }
        },
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "219ab400-d311-4a75-b384-f93df3e5a9f1",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "1bd6dedf-4b0f-4851-ac25-5941e54a19b1",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "3731d2d9-8568-401b-9a0d-4092fbaf26c2",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "9d447446-a916-4a08-9e0b-8d7caa0bd517",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "095bdd7c-36a0-4868-8e2f-ec71898a274c",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "6642f296-cea4-412b-83e8-fb7501fcf207",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "ab6b3813-5f95-4f38-b6aa-a2c9ff30a198",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "59f17ca3-66df-4b32-8a58-63e7d0c9d5f6",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "840174d5-778e-40dc-ae79-a99784f01047",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "473f9a5b-fdb3-4b30-9341-f8a18520ae3e",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "942f5f60-267c-4d5f-a409-18349a38cead",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "9ff249f4-8383-4bab-b381-de5b23ba651b",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "c28203db-a12a-4d18-b410-6ee8de397852",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "8d71678e-c02c-473f-8ea3-7ce0cef1782d",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "b024d777-b6b0-406f-ac95-13e588b4b6f4",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      }, {
        "id" : "7f8b1403-523d-4c92-b91a-9307938683e7",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "newtest" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "6eb2b6f4-b83c-4853-849e-fef89973afa2",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee4bdc94-a41e-4842-ac7b-299e44effdc7",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "b4f6cead-2e4e-4eb4-9c3f-106e7a937341",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "dccf9d02-9483-479f-bda6-721cede844be",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "838ec3a6-15e1-41d5-830f-228733f4ccf2",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "731fc781-3305-49e5-aee5-47ffddbbcbb3",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "01b219b3-9d2c-4d94-8a7d-63bcd2b6f640",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "85b16e24-562f-48c1-8f0e-9409975c1484",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      }, {
        "id" : "8851e2ef-d0fb-4d2b-82ed-8728b5bbac47",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
        "attributes" : { }
      } ],
      "flask-webapp" : [ {
        "id" : "a363f112-e37d-4a94-88f1-df5b2e5162a1",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "3d0e76e4-df7e-44a1-93f6-0242caaf84e9",
    "name" : "default-roles-heredivar",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "HerediVar"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "7bcb76a3-e5bb-4a60-8814-47c9d5e90153",
    "createdTimestamp" : 1652186757808,
    "username" : "norights",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Mirco",
    "lastName" : "testtest",
    "email" : "norights@test.abc",
    "attributes" : {
      "affiliation" : [ "sometest" ]
    },
    "credentials" : [ {
      "id" : "13ff637d-f142-4ff9-8e9a-b87550900fac",
      "type" : "password",
      "createdDate" : 1652186778185,
      "secretData" : "{\"value\":\"tDDfuGveHnMPXhKFwyFR7gfUr4DBSmWWyWsc6Gs3jDlB5qgleAOV3AQoB/ACDJPL+UVUWNUGMqKMYbYEI9hwpQ==\",\"salt\":\"bgKFt00gZGYQHTR+dmS8+w==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-heredivar" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "7a86740e-3a7b-49c9-9d8d-f6cfef0d789c",
    "createdTimestamp" : 1652180190609,
    "username" : "service-account-flask-webapp",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "flask-webapp",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-heredivar" ],
    "clientRoles" : {
      "flask-webapp" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "34be7e1a-5031-4dc6-9359-0ab25cf21bce",
    "createdTimestamp" : 1651737520045,
    "username" : "testuser",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "Max",
    "lastName" : "Mustermann",
    "email" : "test@abc.com",
    "attributes" : {
      "affiliation" : [ "testaffiliation" ]
    },
    "credentials" : [ {
      "id" : "8c248b22-9904-49c0-988a-7564137bf05e",
      "type" : "password",
      "createdDate" : 1651737533985,
      "secretData" : "{\"value\":\"GRMZkLwt60ZBKEUxci0MEPv+m+sHlDQnZdX6JSa5ALEHkGgfPz6pS1T+s7bj1GdAeXOxy2aKse421zWA59o+9Q==\",\"salt\":\"QGvCO8LxdYu72wOC0H3kng==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-heredivar", "visitor" ],
    "clientRoles" : {
      "realm-management" : [ "manage-users", "view-users" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "27e71e0b-744f-4997-b97c-b674c19b96aa",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/HerediVar/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/HerediVar/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "eabbeaaa-dfa4-4c82-87ed-6ae040b7690a",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/HerediVar/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/HerediVar/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "acc326d3-7e93-403d-9de1-74cc7d080850",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "35d40791-375a-4213-88f1-db2261a813b2",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ee4bdc94-a41e-4842-ac7b-299e44effdc7",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
    "clientId" : "flask-webapp",
    "rootUrl" : "http://srv018.img.med.uni-tuebingen.de",
    "adminUrl" : "http://srv018.img.med.uni-tuebingen.de",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "NRLzlQfotGy9W8hkuYFm3T48Bjnti15k",
    "redirectUris" : [ "http://srv018.img.med.uni-tuebingen.de:5000/*" ],
    "webOrigins" : [ "http://srv018.img.med.uni-tuebingen.de" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "pkce.code.challenge.method" : "S256",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "client.secret.creation.time" : "1652083237",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "f96aef1a-349f-4b43-abc8-2953308c3e60",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8487b528-70fc-4514-8ab8-2ac5eb4cad9a",
      "name" : "affiliation",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "affiliation",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "affiliation",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a81304dd-4633-45c6-80e3-179c89a78803",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7c811e94-1992-43d4-a1a9-bc5179e82ae0",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "View HerediVar",
        "ownerManagedAccess" : false,
        "displayName" : "View HerediVar",
        "attributes" : { },
        "_id" : "55625023-94d8-42c3-9d79-b9a933e82dbb",
        "uris" : [ "http://SRV023.img.med.uni-tuebingen.de:5000/api" ],
        "scopes" : [ {
          "name" : "account:view"
        } ]
      } ],
      "policies" : [ {
        "id" : "10ff43f6-50b9-40a0-9240-193d18f6c268",
        "name" : "View Resources Policy",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "roles" : "[{\"id\":\"visitor\",\"required\":true}]"
        }
      }, {
        "id" : "77e37032-9c77-40b5-8489-bfb38e2120b7",
        "name" : "View HerediVar Permission",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"View HerediVar\"]",
          "applyPolicies" : "[\"View Resources Policy\"]"
        }
      } ],
      "scopes" : [ {
        "id" : "b271cfd5-0f3e-4ac5-9e2b-b7fcc6e2a894",
        "name" : "account:view"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "42fff2a2-87f2-467c-9050-03ba8c483f28",
    "clientId" : "newtest",
    "rootUrl" : "https://www.keycloak.org/app/",
    "adminUrl" : "https://www.keycloak.org/app/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://www.keycloak.org/app/*" ],
    "webOrigins" : [ "https://www.keycloak.org" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "abbb4aa6-3a37-4eee-9808-44eb22c01b0a",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : false,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "Client",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "_id" : "6cf0ae2c-6fb9-4822-acd6-826ae468deed",
        "uris" : [ ],
        "scopes" : [ {
          "name" : "view"
        }, {
          "name" : "map-roles-client-scope"
        }, {
          "name" : "configure"
        }, {
          "name" : "map-roles"
        }, {
          "name" : "manage"
        }, {
          "name" : "token-exchange"
        }, {
          "name" : "map-roles-composite"
        } ]
      } ],
      "policies" : [ {
        "id" : "1f216a6d-3b9b-4f65-aa55-8c28046d88c3",
        "name" : "heredivar-account-manager",
        "description" : "with this role you are able to register & inactivate users",
        "type" : "user",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "users" : "[\"testuser\"]"
        }
      }, {
        "id" : "ef531d80-a5e0-4c2d-aeee-33f813f493f1",
        "name" : "manage.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"manage\"]",
          "applyPolicies" : "[\"heredivar-account-manager\"]"
        }
      }, {
        "id" : "f2d47a7e-da67-4f42-b106-e84161d0150e",
        "name" : "configure.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"configure\"]"
        }
      }, {
        "id" : "3918fc9e-e8e1-4796-a358-9dc6434d6351",
        "name" : "view.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"view\"]"
        }
      }, {
        "id" : "4c7a952a-b260-4a99-80f8-014932432f82",
        "name" : "map-roles.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"map-roles\"]"
        }
      }, {
        "id" : "e5c52918-34dd-46ed-b770-1139eb337887",
        "name" : "map-roles-client-scope.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"map-roles-client-scope\"]"
        }
      }, {
        "id" : "e5f2d321-fef7-4e3d-9eeb-68114a1a815b",
        "name" : "map-roles-composite.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"map-roles-composite\"]"
        }
      }, {
        "id" : "01050386-1d46-4161-a081-fc8f6d0318ab",
        "name" : "token-exchange.permission.client.5ad7bea2-ec76-4c8c-98df-65fbfafae12c",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"client.resource.5ad7bea2-ec76-4c8c-98df-65fbfafae12c\"]",
          "scopes" : "[\"token-exchange\"]"
        }
      } ],
      "scopes" : [ {
        "id" : "7a7366f1-dc5d-4034-a022-154dadb3b93d",
        "name" : "manage"
      }, {
        "id" : "d252db45-64ad-4bfa-b999-b9d7875e5a11",
        "name" : "view"
      }, {
        "id" : "611de953-7d01-40ad-894e-9ff26fa51c12",
        "name" : "map-roles"
      }, {
        "id" : "a4f3f591-fa05-419d-96b2-2cedb2b20274",
        "name" : "map-roles-client-scope"
      }, {
        "id" : "3fbb5cae-e957-4ae3-9b69-1468934e2ee6",
        "name" : "map-roles-composite"
      }, {
        "id" : "b0c93136-5b47-4b0f-a381-59290557ad51",
        "name" : "configure"
      }, {
        "id" : "f4c9328b-f51f-4660-888c-1d12a390b101",
        "name" : "token-exchange"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "5455ee30-d725-4220-8c2f-4cccce185214",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/HerediVar/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/HerediVar/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a6f36697-033d-44cd-8599-f6c829e8af46",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "5ef57b3b-6d99-4413-ad31-d52c68b398c6",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "68a6c7b6-d27f-46e7-96b5-6c8fc0a316bf",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "19ecb139-d8b5-4732-90d5-c53ce7bbba39",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "9bea7556-7dd1-4ba0-9e29-cb466c6663e0",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "aebd20cd-3d2d-48ad-a87a-a41497ebb2b7",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "584653df-35fa-493c-9201-dfd82da34d47",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "e0a6843f-650e-4a29-ac7a-5cd05135f5b2",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "a00f6b4f-d34d-44cb-89ef-4bf51e604a01",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "06a76c65-9ff3-4afb-86b1-96fd1139a46d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "5e8b513a-544f-4cc2-bfaf-4dd33889d85e",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "0506a16a-d0f1-480e-9103-4a346fae57ac",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "8d7f11bc-f148-40db-b163-c521721719ad",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "d62fa56a-c732-4b7e-baf9-442efe20cd9d",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "8c004982-6a89-4ca6-a25b-eaeb0770f128",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9d850bb2-2773-49da-9144-09d3117ec4d0",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "5a9b092e-8291-42ed-8152-c6435e42f7c4",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "e934232d-ded4-48b9-b0a9-c844829564aa",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "3438233e-1bd8-4568-a499-2582b4314be4",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "a4958513-97df-4c6b-99c0-b8e8b02a0076",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "2cc4a610-5e1a-4661-8159-c7756da79b3d",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "937d12d4-a090-46fd-9065-15d5f6450ca8",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "468a4029-281f-4d27-add3-3e3b6521c8bf",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "905e07f6-0e0a-4fa1-9307-44c34e078fc0",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d26071d4-03ab-49ab-b36a-2851f2e4dcdc",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0905b728-c642-4ee4-8053-fafa810fb513",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "794797d7-c98d-44b9-a85d-9185c4e414c8",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "74cfd586-f00c-44cd-aa06-9957fb26fd63",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "87e3b4ba-83a2-4a2c-8915-e8dfcd104bc6",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6486dde5-6a2f-470a-a120-2052ab1dc619",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dbebdcfc-4b44-46c2-89eb-5dd4ad348290",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5409e98b-07c5-42fb-a56f-82fe84817a1c",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5b666cb1-a752-4050-93fb-47d0a7d353a1",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "baf37772-0ca8-4762-8d0e-f941c132fea7",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "897418a6-de0e-4e13-86b0-0d46ed473ff7",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a5b40293-03d5-42f7-9d5a-4c4d9ab8a227",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3826bbcc-c999-4c76-add8-8dd6824b7ae8",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "55f1b455-3b2b-4fb7-a681-8e82e5dcc89c",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none'",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsExpiration" : 3600,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "OAUTH2_DEVICE_VERIFY_USER_CODE", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "TOKEN_EXCHANGE", "AUTHREQID_TO_TOKEN", "LOGOUT", "REGISTER", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "DELETE_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "AUTHREQID_TO_TOKEN_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "79a895cf-a76e-4b28-8002-1201ce1d575b",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "4b4e888a-6933-4a9b-8707-8638ff90c8d1",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "cd284b32-a2fc-4178-83b8-774d457254fa",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "932c62db-875a-402f-add8-f05ca0a8070d",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "86d3fddb-1fd5-4b7a-83af-517735855a05",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e5eb8361-8733-492c-b317-eea6ccfd4cd3",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "a6cb7d68-6b3e-4a38-8055-fa56080127d1",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "ce53eb28-0700-434d-abca-fb6217e2d56b",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "963a301b-002f-4b45-8515-dc7e96b14bf5",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "c4808d7a-00f0-4e87-9665-c05fb7a0a2bc",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f13ac41a-7c9e-4e68-9eed-01e685eeb207" ],
        "secret" : [ "LSe0kwnqV3MxYIJZLpKgXZgmeaujgwSHNMOYsJMAHuVO2Uxs0PfeVqo6Qm8quDmDt3sXf--jSFcZKr8rubc9dg" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "c6d94718-17c0-4e1d-a9a4-2d1ab36ed2a4",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAnrW2XKunDY+bd0mdB3QgqNdvoHvNSTh5aU/b59qsjmYvNj0vlKzf/h9u1CXa8xKydkdXnzUvVb0La+Kp14t12U2SgIVVtPefFjWvzHt2NhoMAKE5K9Kg9t/5eJe5B0HdTvULhWQsYzT1derCOGy5yLlXpsfFBVXyB8nxCEtUXhJ5zDhWLFkIP1XKLieWX1+avNuotcB25SEWiTnoAtunVpXHCn72nWOs4I26f16WboKMWkL94gN2sWNuyZAHOtr1LZ1kFmXnZH8S6zCeeuRtAf/8K3tGtnjSALox0vesTV8xAIBE4+E0WAV1rT4f0DO7W6uQv7ivH6hlvZLecYhRwwIDAQABAoIBAGBslDwfSeJSUqkZv17M7h7GrRo6vVF0D0etbjSiRd5KNPrmF6djlL8nR8V6rliqDmUQGSswO+8CaRMF5hx/rXz1xUFyQM0u+KecvI8mn35lOs+TJFH8qTD0iPP8cjz3hka3WGWVo+YuQcd/drqjTAiomplIm+oO+npC9b8NTVfNOnW17HPT/TTmQVeCcIHfDnznGmLK/BCOaIHQ4d15rMsdWtN06zYOmA1UXk5bfEcEfECKoSHCW9P6XJYhZBrtvu0/fS0vVNA3WQyH3fIYPewj1+nQ9OB8Oum547+SrVqSmQN7YK5bzK/5KndNjgYBZ6DYwJLnT/3DEW2X2GmBh/kCgYEA1go1DAEWX1pZrEExAfSgfJp0XSBMNlh3THxY70+GCszVYEeN79lwofPie9/ChpVPvqxoOo9UrFaUc+zcEKjm0GDTg9OW3GjTj5lpye+ky/HZ9kFhJOGli3MngTMdjXQYbfGLV5UJtuuqWUbsXCy3m1F4W4PFFfeAs8vIHP7iZpUCgYEAvdK2yPpZV63HZowhlgQSVNEbLpZ6/bf5pGXxZpOxGa57WzcpR44G8ottgVsrepEqMVW6MZQZUnNNqVclF/gI0llkCazIEsw4SIXyC7O/CMlPjOOsaonsA2/HxkngCt712BAUUh3Qe0iikItGiU6vP27c6N4o9Od0mj9zfuAb+PcCgYEAouArk9H0A2WOnX0SXQmZYphqej9Mn4JcbhCl4J3kQ62xpc1tnhoaErOzIk6ZCa7vewpZWk6dwXM1Dq4snGTbF7DG5CcMQvdmHn1AulEpV6TYFwOTd+xZ/C8J3dBW6cBxoqBPR7t7I/5bqApHbLD+myu46fLw9BFel/M3eZEgGa0CgYBkM63/S4AL85T1wfUcvot6sGM75X2JHyutp46VilMLbnp5fRXSStvJ/uXQSfMaoTR3lHxUHYx8ZJdTU8gl7e2iNEPFg6qdmaYASoyptrmaBsJyaeCi4Klwavo25tpYgred1WcUrd5WpdICoTKb2qhRwNDmMBfIp8F6hxINoHnDowKBgA0jPNphMwKwcuagpm8XYV8ALwe8RB6xurn1MA+9bCsnqZysHih800BP9bgAnQXMisI+RmTCl5U19ww/ap8oSy9XP0f9LisoYJ5yk7N5gA61JlzuVDLrRynetdKiilHKC/wMf+JIARnKbl1Jmbj6Xg8cWtTWlLDV8RFVmN4QJubh" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICoTCCAYkCBgGAjzM73TANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlIZXJlZGlWYXIwHhcNMjIwNTA0MTMxMDQxWhcNMzIwNTA0MTMxMjIxWjAUMRIwEAYDVQQDDAlIZXJlZGlWYXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCetbZcq6cNj5t3SZ0HdCCo12+ge81JOHlpT9vn2qyOZi82PS+UrN/+H27UJdrzErJ2R1efNS9VvQtr4qnXi3XZTZKAhVW0958WNa/Me3Y2GgwAoTkr0qD23/l4l7kHQd1O9QuFZCxjNPV16sI4bLnIuVemx8UFVfIHyfEIS1ReEnnMOFYsWQg/VcouJ5ZfX5q826i1wHblIRaJOegC26dWlccKfvadY6zgjbp/XpZugoxaQv3iA3axY27JkAc62vUtnWQWZedkfxLrMJ565G0B//wre0a2eNIAujHS96xNXzEAgETj4TRYBXWtPh/QM7tbq5C/uK8fqGW9kt5xiFHDAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABSmhUINY2VpEhyu7MxaxHKUKhj1fR/onR14Nqb1988Ii5wjLelmrX6Fv7ZMsM3GkYZozcgXzVuwU/DrX+Eegm+DTGNGEr3E/IAYX+eps5qDEiWn9CW9ke1gntm5EP/Fvm25x06vooWf9DsS3RBLZAsrkdEYaJDUsGrJAe0iDwiGHTcyUMXxSeLkvevwwR0Q0/CU596+uFZdqKF9iA3YACCgQjB//xinqG+VGERkqIWGaz14w4i4FeW0WWwCGx5SaqtS+BYzE3JYZ4HjVh06f6pkaxrxV00188n9/BoRt+CRukLeKouIr07ViDpy7crVjaRO1FIwGhue7ftiJmSAkMs=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "73fbccdf-1b3d-4068-a366-45212ed2c549",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAiqm7sBpC/YDRJ2VVUu9ZnBHTCSo0GrF8SpCa7AjAhPNmhOENQtcBN0SE7u4xBL3NeL9+IJbL/YZX+UprWVY7jsHX7zM+Vw2Mo8rEkq9dBY8bknmjPiqM/r+KH07s0m5iRLIHs2VGNnza0ncS7DMomCj4G6DV5iy2HgD6/7VRp/47fC87FvlG2r9GuDvy0S20DttbOtNdQzbTGZ4Feoru7MFdDoehm9CGfYnlnRvIrSTqFaJXFxWt3Lg66DX9877ROtfuLlz83UMCsakBYNGSP0hytKSUl5cAjinkWJP3BqEveutSJG0hiYhp5oLxRb6haXRX4+JCy+/KpjFjQhaO3QIDAQABAoIBABp1zUULneD2JfNYmPGcjwMDO7wx+4Nkfw1Tjtyfxu0X7WZJ89ffY3ICd0OI3H3FImJ6WD0ryX11l3AQzW9czzysrOIOa0T9ZusSlHRRVnTrHB3VbFs+j21Fa7wRuYtmWQY22tVW7BEVvkQPSOMd2A9BMidDh83GlnIfScZl+VEPHwps704NG74NWATEcz2EuKFr48MTjdQLjEtIOKXntY5B/7TL3ad48qobli+tA98L4tkRCTg1DEax2KljTc7Mbr3wRycEclUbOfqDuLrLUh+Ef2vg+n5C4izpl8qAlnTRMJcU/S+/H8LRxJ/2OYkf0eZrfFHISgpFTw2xy+bSDFkCgYEA6TN3027hVq1ukYkHzOKVv/bkZ3A8jx/yT4CKTJGH36IMnQOyc64yXvdlyPA9YrDc08KXqfyoXfC7o3lDPDkHHpMWrq40XYpxMh7St0u3Fa1PL6smVTgQtCDQ5tpSwBEAqqGVGOZiTX+6jVojGE3te4z0+vQtlKLR1Ve095vGiFsCgYEAmDgtUZHQQYBxYG+C6tCVx9WMe7GMLuNU4hy7DAQ631nx6nCzee1RolLL9h/i87g+YvH5ebKYx+xaRrb2iivUsWtjTv2RMoNiRWG2/EkDyXBjz3Rr0RhsicKMmgGVaMvLEW68nCOhIWAyqwQbh0OxUPdy5uuZauzTQYRYmyC5qycCgYB3wFxKEOhaUFk1Fv8QcVKg7zG/BF20yZzuwn1CcIErj9WWU62xxcRMDBMSqnt7UIM1ovmq6vmys8pHWh/yrv4+7x14ujBd0JfsOvPN+G2eDg9Z1TOsE0xQk4Fy6q4Pvytuc+dSkAvu7CZqK91Vv76x8WJj9Dvr1eiW+6EMfcvnfQKBgCBI6fO/BXifEWzuucmr69iyhlVF1wGq3boHdfSagRIWNaUPukFGAGZ5QSE2qiAfF7xMrikNpDHjA1K0Q54Spc3rhOigB0e7bgBhNTpVEiSLXeAGRUfX8k1VohSX+WR8tNlBr2c+d1Jo4NY8zMnnpZgSo6AuoB95k2T1+QUN79NJAoGATPuOwgOV6GHPZ7ncytpVtd+qENwz5qxXK0AgtAYL2u8CaaHCA9/opZyKo0iryoWmAQ3uetTCttONsT/8P6HdK3Qvlttc6BV2QrOen8tySRakrsQfILA2KeuNZtL4obiuiUNxOnNDM6r7y9og7TFIN8VnlbvUQkZpaBLN7kSmqTY=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICoTCCAYkCBgGAjzM8ZjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlIZXJlZGlWYXIwHhcNMjIwNTA0MTMxMDQxWhcNMzIwNTA0MTMxMjIxWjAUMRIwEAYDVQQDDAlIZXJlZGlWYXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCKqbuwGkL9gNEnZVVS71mcEdMJKjQasXxKkJrsCMCE82aE4Q1C1wE3RITu7jEEvc14v34glsv9hlf5SmtZVjuOwdfvMz5XDYyjysSSr10FjxuSeaM+Koz+v4ofTuzSbmJEsgezZUY2fNrSdxLsMyiYKPgboNXmLLYeAPr/tVGn/jt8LzsW+Ubav0a4O/LRLbQO21s6011DNtMZngV6iu7swV0Oh6Gb0IZ9ieWdG8itJOoVolcXFa3cuDroNf3zvtE61+4uXPzdQwKxqQFg0ZI/SHK0pJSXlwCOKeRYk/cGoS9661IkbSGJiGnmgvFFvqFpdFfj4kLL78qmMWNCFo7dAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGcEDibgzH5B6r/oNnp3c60W2P4kW/jnPePV4aZIQbAG6F5Ju+vA8tGvvbOG3oDkPWT94gfvWUGGabt3OI6DCE4dU0HqgulYtJCUQUiFgak7Og928D1O/aeqoYovhuhBwWfUpTGVdR0dKhN8GNQU2jIBt0cOi6Uht2PAxZZ6Gs48gx1CSXIvhrYUvRezkUPuiMuDKsZBJNIlnmsmftLzFvv+I5mbgOl+BuvAdw/mZj58ZUsxJ4iLjhze0pfiSyCaugAijM30E3rXoSSNHIFZCujMIQOeZtFhP+FG/abukbJI5ZuVOn3FzkZXUC5EsTUWkdYIT26KmYnHXv7msAg7drM=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "335d0e64-aa3e-40a1-a338-7710522ca135",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "01e5bd9a-2198-4604-977e-321f50830eff" ],
        "secret" : [ "ioEOmZazgsCaJF08PDiU_w" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "2d2f6e11-e746-4449-a32e-ff8a0690fb47",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fb2733a3-68e8-4665-b229-d340109c12bf",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "71e442a5-8616-4dc7-bea2-0624b773049b",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "939aee9a-6c64-490e-b09f-03e8fb5fc481",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f848b2d-e9f3-4e68-a02e-0c15f6b330f7",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4811dc12-2d87-47fb-a20e-4b260847ed05",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "67c4a37a-9548-4201-b4bb-1298c89a2926",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d9a6e54b-97a7-4142-bcbb-479f5f69cbb5",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6f34bfd8-bdc0-4792-857e-bc693d00bcb2",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "338c88ca-0935-4f1b-acd4-52ec97c42ad7",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9912e091-81f7-4be4-ad9d-e6b64aaa0d27",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "72a6ee47-7677-4bc3-b12d-802ea0092040",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2ef75815-766d-4afa-8688-7f4256ba9e34",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8a54c6c1-dce9-4da0-84c8-64e2c75b5215",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "24dcb88e-dc72-4986-aac6-54c0ee908d3b",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3f4128f5-97f7-416d-914e-5f2184d7524d",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6fa7f891-6a30-42ff-9ecb-72a0617e296d",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "59a1b4d3-ac6e-44af-a8d6-e930c0574cf4",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7d7f2d5d-9f22-459b-a454-da575f0b6daf",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d91825e0-93ad-43fa-8070-22f8e1ab6eff",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "32645db8-117e-414d-bb0a-aea08e608d94",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "18f63ea9-5029-49b2-b565-5088332680ed",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "clientOfflineSessionMaxLifespan" : "0",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}