name: ci frontend

on: [push]

jobs:

  test_frontend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_USER: test_user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # download repository
      - uses: actions/checkout@v3

      - name: Verify MySQL connection from container 
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          mysql --host 0.0.0.0 -uroot -ppassword -e "SHOW DATABASES"


      # prepare keycloak
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Prepare Keycloak
        run: |
          chmod 755 src/frontend_celery/tests/script/prepare_keycloak.sh
          src/frontend_celery/tests/script/prepare_keycloak.sh

      # start keycloak
      - name: Start Keycloak
        run: |
          chmod 755 src/frontend_celery/tests/script/start_keycloak_for_tests.sh
          src/frontend_celery/tests/script/start_keycloak_for_tests.sh


      # build python
      - name: Set up Python 3.6.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.6.9'  # use 3.x to use the most up-to-date python3 version
          architecture: 'x64' # Optional - x64 or x86 architecture, defaults to x64
      - uses: actions/cache@v2 # cache the python environment to speed up tests
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install wheel setuptools
          python3 -m pip install --upgrade setuptools wheel
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #- name: Lint with flake8
      #  run: |
      #    # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      



      # run tests
      - name: run tests
        run: |
          chmod 755 src/frontend_celery/tests/script/run_tests.sh
          src/frontend_celery/tests/script/run_tests.sh
        ##### !!!!!! REPLACE THIS with secrets that are loaded from github: https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md
        env:
          FLASK_SECRET_KEY: The_testing_key
          CLIENT_ID: flask-webapp
          CLIENT_SECRET: NRLzlQfotGy9W8hkuYFm3T48Bjnti15k
        shell: bash